/**
 * @description You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 * 
 * URL: https://leetcode.com/problems/find-the-difference/description/?envType=study-plan-v2&envId=programming-skills
 * 
 * After both loops, result will hold the character code of the additional character. 
 * This is because XORing a number with itself cancels out (e.g., a ^ a = 0), and XORing with 0 leaves the number unchanged. 
 * Thus, all characters that appear in both s and t will cancel out, leaving only the additional character's code in result. 
 * The function then converts this character code back to a character using String.fromCharCode.
 * 
 * Example
 *  Let's say s = "abcd" and t = "abcde". The function will:
 *  XOR all characters in s: a ^ b ^ c ^ d
 *  XOR all characters in t: a ^ b ^ c ^ d ^ e
 *  The result will be 0 ^ e (since all other characters cancel out), which is e.
 *  Thus, the function will return 'e'.
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference = function(s, t) {
    let result = 0; 

    for (let i = 0; i < s.length; i++) {
        result ^= s.charCodeAt(i);
    }

    for (let i = 0; i < t.length; i++) {
        result ^= t.charCodeAt(i);
    }

    return String.fromCharCode(result); 
};